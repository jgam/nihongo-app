{"version":3,"sources":["Day.js","Level.js","Vocab.js","Form.js","Database.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Day","level","handleButton","words","N5","N4","N3","N2","N1","vocab_portion","parseInt","length","onClick","slice","Level","rel","href","integrity","crossOrigin","variant","Vocab","output_words","prevButton","nextButton","list_words","day","handleHome","map","word","className","key","meaning","formStyle","padding","inputStyle","margin","Form","db","useState","firstname","lastname","names","setNames","useEffect","version","stores","formData","transaction","a","get","dbFirstname","dbLastname","add","id","value","catch","e","console","log","stack","close","setName","put","prevNames","handleSetName","target","handleSubmit","preventDefault","style","onSubmit","type","name","onChange","Database","open","setOpen","width","Dexie","App","props","updateDB","handleLevel","input_level","setState","page_state","handleDays","input_days","words_list","days","voc_range","alert","voc_rage","handleVocab","input_vocab","definitions","render_views","state","current_state","this","src","logo","alt","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.efad3705.chunk.js","sourcesContent":["import React from 'react';\nimport N5 from './json/N5.json';\nimport N4 from './json/N4.json';\nimport N3 from './json/N3.json';\nimport N2 from './json/N2.json';\nimport N1 from './json/N1.json';\n\nconst Day = ({ level, handleButton }) => {\n  var words = [];\n  if (level === 'N5') {\n      words = N5;\n  }\n  else if(level === 'N4'){\n      words = N4;\n  }\n  else if(level === 'N3'){\n      words = N3;\n  }\n  else if(level === 'N2'){\n      words = N2;\n  }\n  else{\n      words = N1;\n  }\n    \n  //essentially we need inputs to divide the days to come up with the plans\n  //this needs to be done with web db\n  \n  var vocab_portion = parseInt(words.length / 7);\n\treturn (\n\t  <div>\n\t\t<button onClick={() => handleButton(1,words.slice(vocab_portion*0, vocab_portion*1),words,vocab_portion)}>day 1</button>\n\t\t<button onClick={() => handleButton(2,words.slice(vocab_portion*1, vocab_portion*2),words,vocab_portion)}>day 2</button>\n\t\t<button onClick={() => handleButton(3,words.slice(vocab_portion*2, vocab_portion*3),words,vocab_portion)}>day 3</button>\n\t\t<button onClick={() => handleButton(4,words.slice(vocab_portion*3, vocab_portion*4),words,vocab_portion)}>day 4</button>\n\t\t<button onClick={() => handleButton(5,words.slice(vocab_portion*4, vocab_portion*5),words,vocab_portion)}>day 5</button>\n\t\t<button onClick={() => handleButton(6,words.slice(vocab_portion*5, vocab_portion*6),words,vocab_portion)}>day 6</button>\n\t\t<button onClick={() => handleButton(7,words.slice(vocab_portion*6, vocab_portion*7),words,vocab_portion)}>day 7</button>\n\n\n\t  </div>\n\t);\n  };\n  \n  export default Day;\n  ","import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\n\n\nconst Level = ({ handleButton }) => {\n\treturn (\n\t  <div>\n\t\t<link\n\t\t\trel=\"stylesheet\"\n\t\t\thref=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n\t\t\tintegrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n\t\t\tcrossOrigin=\"anonymous\"\n\t\t/>\n\t\t<button onClick={() => handleButton('N5')}>N5</button>\n\t\t<button onClick={() => handleButton('N4')}>N4</button>\n\t\t<button onClick={() => handleButton('N3')}>N3</button>\n\t\t<button onClick={() => handleButton('N2')}>N2</button>\n\t\t<button onClick={() => handleButton('N1')}>N1</button>\n\t\t<ButtonToolbar>\n\t\t\t<Button onClick={()=> handleButton('N5')} variant=\"primary\">Primary N5</Button>\n\t\t</ButtonToolbar>\n\t  </div>\n\t);\n  };\n  \n  export default Level;\n  ","import React from 'react';\nimport { tsConstructorType } from '@babel/types';\nimport Button from 'react-bootstrap/Button'\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar'\n\nconst Vocab = ({ output_words, handleButton, prevButton, nextButton, list_words, vocab_portion, day, handleHome }) => {\n\treturn (\n\t  <div>\n        <link\n                rel=\"stylesheet\"\n                href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\"\n                integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\"\n                crossOrigin=\"anonymous\"\n            />\n        <ButtonToolbar>\n            <Button onClick={()=> handleHome()}> home </Button>\n        </ButtonToolbar>\n\t\t{/*<button onClick={() => handleButton(output_words.slice(0, 19))}>Home</button>*/}\n        <br></br>\n\t\t<button onClick={() => prevButton(day-1,list_words.slice(vocab_portion*(day-2), vocab_portion*(day-1)),list_words,vocab_portion)}>Previous</button>\n        <button onClick={() => nextButton(day+1,list_words.slice(vocab_portion*(day), vocab_portion*(day+1)),list_words,vocab_portion)}>Next</button>\n\n        {/*{JSON.stringify(output_words)}*/}\n        {/*{output_words.map((item) => <li>{item}</li>)}*/}\n        {output_words.map(word => (\n            <div className=\"word\" key={word.word}>{word.word} : {word.meaning}</div>\n        ))}\n\t  </div>\n\t);\n  };\n  \n  export default Vocab;","\nimport React, { useEffect, useState } from 'react'\nimport { Offline, Online } from 'react-detect-offline'\n\n// some inline styling so everything isn't squished\nconst formStyle = { padding: '2rem 0rem' }\nconst inputStyle = { margin: '1rem 0rem' }\n\n// a simple form with a first name, last name, and submit button\nconst Form = ({ db }) => {\n  // store form values in a state hook\n  const [names, setNames] = useState({ firstname: '', lastname: '' })\n\n  useEffect(\n    () => {\n      // create the store\n      db.version(1).stores({ formData: 'id,value' })\n    \n    \n    db.transaction('rw', db.formData, async () => {\n        //get the first and last name from the data\n        const dbFirstname = await db.formData.get('firstname')\n        const dbLastname = await db.formData.get('lastname')\n\n        //if the first or last name fields have not be added, add them\n        if (!dbFirstname) await db.formData.add({id: 'firstname', value: ''})\n        if (!dbLastname) await db.formData.add({id: 'lastname', value:''})\n\n        //set the initial values\n        setNames({\n            firstname: dbFirstname ? dbFirstname.value : '',\n            lastname: dbLastname ? dbLastname.value: ''\n        })\n    }).catch(e =>{\n        //log any errors\n        console.log(e.stack || e)\n    })\n    return () => db.close()\n    \n    },\n  // run effect whenever the database connection changes\n  [db]\n)\n\n  // sets the name in the store and in the state hook\n  const setName = id => value => {\n    console.log(db)\n    // update the store\n    db.formData.put({ id, value })\n    // update the state hook\n    setNames(prevNames => ({ ...prevNames, [id]: value }))\n  }\n\n  // partial application to make on change handler easier to deal with\n  const handleSetName = id => e => setName(id)(e.target.value)\n\n  // when the form is submitted, prevent the default action\n  // which reloads the page and reset the first and last name\n  // in both the store and in the state hook\n  const handleSubmit = e => {\n    e.preventDefault()\n    setName('firstname')('')\n    setName('lastname')('')\n  }\n\n  return (\n    <form style={formStyle} onSubmit={handleSubmit}>\n      <span>First name:</span>\n      <br />\n      <input\n        style={inputStyle}\n        type=\"text\"\n        name=\"firstname\"\n        value={names.firstname}\n        onChange={handleSetName('firstname')}\n      />\n      <br />\n      <span>Last name:</span>\n      <br />\n      <input\n        style={inputStyle}\n        type=\"text\"\n        name=\"lastname\"\n        value={names.lastname}\n        onChange={handleSetName('lastname')}\n      />\n      <br />\n      {/* Handle whether or not the user is offline */}\n      <Online>\n        <input type=\"submit\" value=\"Submit\" onClick={handleSubmit}/>\n      </Online>\n      <Offline>You are currently offline!</Offline>\n    </form>\n  )\n}\n\nexport default Form","import React, { useState } from 'react'\nimport Dexie from 'dexie'\n\nimport Form from './Form'\n\nconst Database = () => {\n  const [open, setOpen] = useState(true)\n\n  return (\n    <div style={{ margin: '2rem auto', width: '200px' }}>\n      <button onClick={() => setOpen(!open)}>{`${\n        open ? 'Close' : 'Open'\n      } Form`}</button>\n      {/* Pass in a new connection to the database when Form is first rendered */}\n      {open && <Form db={new Dexie('FormDatabase')} />}\n    </div>\n  )\n}\n\nexport default Database","import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './css/App.css';\nimport Day from './Day';\nimport Level from './Level';\nimport Vocab from './Vocab';\nimport Database from './Database';\n\n//db steps\n\n/*\n1. Open a database\n2. Create an object store in the database\n3. Start transaction and make request to do some database operation, adding or retrieving data\n4. Wait for the operation to complete by listening for the right kind of DOM event\n5. Do something with the results\n*/\n\n\n\nclass App extends React.Component {\n  //constructor sets the state\n  constructor(props){\n    super(props);\n    this.state = {\n      page_state: '1',\n      level: '',\n      days: 0,\n      words: [],\n      list_words: [],\n      voc_rage: 0\n    };\n\n    //db setup\n  \n }\n\n  //db add data!\n  updateDB = () => {\n    /*\n    vocabProgress[0].name = 'Blue Men T-shirt';\n     productsStore.put(vocabProgress[0]).onsuccess = function(event) {\n         console.log('[Transaction - PUT] product with id 1', event.target.result);\n     };\n    */\n\n\n  }\n\n  //handle functions update the states\n  handleLevel = input_level => {\n    this.setState({\n      page_state: '2',\n      level: input_level\n    });\n  }\n\n  handleDays = (input_days, words_list, list_words, vocab_portion) => {\n    if (input_days > 0 && input_days < 8){\n      this.setState({\n        page_state:'3',\n        days: input_days,\n        words: words_list,\n        list_words: list_words,\n        voc_range: vocab_portion\n      });\n    }\n    else{\n      alert('This is either the first or last page');\n    }\n  }\n\n  handleHome = () => {\n    this.setState({\n      page_state: '1',\n      level: '',\n      days: 0,\n      words: [],\n      list_words: [],\n      voc_rage: 0\n    })\n  }\n\n  handleVocab = (input_vocab, definitions) => {\n    this.setState({\n\n    })\n  }\n\n\n  render_views = page_state => {\n    console.log('in renderviews: ', this.state.days);\n    if(page_state === '1'){\n      console.log('here')\n      return <Level handleButton={this.handleLevel}/>\n    }\n    else if(page_state === '2'){\n      return <Day level={this.state.level} handleButton={this.handleDays}/>\n    }\n    else if(page_state === '3'){\n      return <Vocab output_words={this.state.words} handleButton={this.handleVocab}\n      prevButton={this.handleDays} nextButton={this.handleDays} \n      list_words={this.state.list_words} vocab_portion={this.state.voc_range}\n      day={this.state.days} handleHome={this.handleHome}/>;\n    }\n    else{\n      return 'error occurred';\n    }\n  }\n\n  render(){\n    //state logic\n    var current_state = this.state.page_state;\n    console.log('state inputs days: ',this.state.days);\n\n\n    //return\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"btn-menu\">\n            <a href=\"\">\n              <em>\n              </em>\n            </a>\n          </div>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div className=\"stateViews\">\n          <Database />\n          {this.render_views(current_state)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}