{"ast":null,"code":"var _jsxFileName = \"/Users/jeonghan.gam/Desktop/jgam/nihongo-app/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './css/App.css';\nimport Day from './Day';\nimport Level from './Level';\nimport Vocab from './Vocab'; //db steps\n\n/*\n1. Open a database\n2. Create an object store in the database\n3. Start transaction and make request to do some database operation, adding or retrieving data\n4. Wait for the operation to complete by listening for the right kind of DOM event\n5. Do something with the results\n*/\n\nvar request = indexedDB.open('vocabDB', 1);\n\nrequest.onsuccess = function (event) {\n  // some sample products data\n  var vocabProgress = [{\n    id: 1,\n    name: 'Red Men T-Shirt',\n    price: '$3.99'\n  }, {\n    id: 2,\n    name: 'Pink Women Shorts',\n    price: '$5.99'\n  }, {\n    id: 3,\n    name: 'Nike white Shoes',\n    price: '$300'\n  }, {\n    id: 4,\n    name: 'Jimmy',\n    price: '$100.99'\n  }]; // get database from event\n\n  var db = event.target.result; // create transaction from database\n\n  var transaction = db.transaction([\"VocabDB\"], 'readwrite'); //more like giving access\n  //var transaction = db.createObjectStore('vocabProgress', {keyPath: 'id'});\n  // add success event handleer for transaction\n  // you should also add onerror, onabort event handlers\n\n  transaction.onsuccess = function (event) {\n    console.log('[Transaction] ALL DONE!');\n    console.log('erroorrrr!!');\n  }; // get store from transaction\n\n\n  var productsStore = transaction.objectStore('VocabDB');\n  /*************************************/\n  // put products data in productsStore\n\n  vocabProgress.forEach(function (vocab) {\n    //this is like lambda function\n    var db_op_req = productsStore.add(vocab);\n\n    db_op_req.onsuccess = function (event) {\n      console.log(event.target.result === vocab.id); // true\n\n      console.log('db transaction is true ');\n    };\n  }); // count number of objects in store\n\n  productsStore.count().onsuccess = function (event) {\n    console.log('[Transaction - COUNT] number of products in store', event.target.result);\n  }; // get product with id 1\n\n\n  productsStore.get(1).onsuccess = function (event) {\n    console.log('[Transaction - GET] product with id 1', event.target.result);\n  }; // update product with id 1\n\n\n  vocabProgress[0].name = 'Blue Men T-shirt';\n\n  productsStore.put(vocabProgress[0]).onsuccess = function (event) {\n    console.log('[Transaction - PUT] product with id 1', event.target.result);\n  };\n  /*\n  // delete product with id 2\n  productsStore.delete(2).onsuccess = function(event) {\n      console.log('[Transaction - DELETE] deleted with id 2');\n  };\n   */\n\n};\n\nrequest.onerror = function (event) {\n  console.log('[onerror]', request.error);\n};\n\nrequest.onupgradeneeded = function (event) {\n  console.log('first db createion');\n  var db = event.target.result;\n  var productsStore = db.createObjectStore('VocabDB', {\n    keyPath: 'id'\n  });\n};\n\nclass App extends React.Component {\n  //constructor sets the state\n  constructor(props) {\n    super(props);\n\n    this.handleLevel = input_level => {\n      this.setState({\n        page_state: '2',\n        level: input_level\n      });\n    };\n\n    this.handleDays = (input_days, words_list, list_words, vocab_portion) => {\n      if (input_days > 0 && input_days < 8) {\n        this.setState({\n          page_state: '3',\n          days: input_days,\n          words: words_list,\n          list_words: list_words,\n          voc_range: vocab_portion\n        });\n      } else {\n        alert('This is either the first or last page');\n      }\n    };\n\n    this.handleHome = () => {\n      this.setState({\n        page_state: '1',\n        level: '',\n        days: 0,\n        words: [],\n        list_words: [],\n        voc_rage: 0\n      });\n    };\n\n    this.handleVocab = (input_vocab, definitions) => {\n      this.setState({});\n    };\n\n    this.render_views = page_state => {\n      console.log('in renderviews: ', this.state.days);\n\n      if (page_state === '1') {\n        console.log('here');\n        return React.createElement(Level, {\n          handleButton: this.handleLevel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        });\n      } else if (page_state === '2') {\n        return React.createElement(Day, {\n          level: this.state.level,\n          handleButton: this.handleDays,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        });\n      } else if (page_state === '3') {\n        return React.createElement(Vocab, {\n          output_words: this.state.words,\n          handleButton: this.handleVocab,\n          prevButton: this.handleDays,\n          nextButton: this.handleDays,\n          list_words: this.state.list_words,\n          vocab_portion: this.state.voc_range,\n          day: this.state.days,\n          handleHome: this.handleHome,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155\n          },\n          __self: this\n        });\n      } else {\n        return 'error occurred';\n      }\n    };\n\n    this.state = {\n      page_state: '1',\n      level: '',\n      days: 0,\n      words: [],\n      list_words: [],\n      voc_rage: 0\n    };\n  } //handle functions update the states\n\n\n  render() {\n    //state logic\n    var current_state = this.state.page_state;\n    console.log('state inputs days: ', this.state.days); //return\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }))), React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"stateViews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.render_views(current_state)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jeonghan.gam/Desktop/jgam/nihongo-app/src/App.js"],"names":["React","Day","Level","Vocab","request","indexedDB","open","onsuccess","event","vocabProgress","id","name","price","db","target","result","transaction","console","log","productsStore","objectStore","forEach","vocab","db_op_req","add","count","get","put","onerror","error","onupgradeneeded","createObjectStore","keyPath","App","Component","constructor","props","handleLevel","input_level","setState","page_state","level","handleDays","input_days","words_list","list_words","vocab_portion","days","words","voc_range","alert","handleHome","voc_rage","handleVocab","input_vocab","definitions","render_views","state","render","current_state","logo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './css/App.css';\nimport Day from './Day';\nimport Level from './Level';\nimport Vocab from './Vocab';\n\n//db steps\n\n/*\n1. Open a database\n2. Create an object store in the database\n3. Start transaction and make request to do some database operation, adding or retrieving data\n4. Wait for the operation to complete by listening for the right kind of DOM event\n5. Do something with the results\n*/\n var request = indexedDB.open('vocabDB', 1);\n\n request.onsuccess = function(event) {\n     // some sample products data\n     var vocabProgress = [\n         {id: 1, name: 'Red Men T-Shirt', price: '$3.99'},\n         {id: 2, name: 'Pink Women Shorts', price: '$5.99'},\n         {id: 3, name: 'Nike white Shoes', price: '$300'},\n         {id: 4, name: 'Jimmy', price: '$100.99'}\n     ];\n \n     // get database from event\n     var db = event.target.result;\n \n     // create transaction from database\n     var transaction = db.transaction([\"VocabDB\"], 'readwrite');//more like giving access\n     //var transaction = db.createObjectStore('vocabProgress', {keyPath: 'id'});\n     // add success event handleer for transaction\n     // you should also add onerror, onabort event handlers\n     transaction.onsuccess = function(event) {\n         console.log('[Transaction] ALL DONE!');\n         console.log('erroorrrr!!');\n     };\n \n     // get store from transaction\n     var productsStore = transaction.objectStore('VocabDB');\n \n     /*************************************/\n \n     // put products data in productsStore\n     vocabProgress.forEach(function(vocab){//this is like lambda function\n         var db_op_req = productsStore.add(vocab);\n \n         db_op_req.onsuccess = function(event) {\n             console.log(event.target.result === vocab.id); // true\n             console.log('db transaction is true ');\n         }\n     });\n \n     // count number of objects in store\n     productsStore.count().onsuccess = function(event) {\n         console.log('[Transaction - COUNT] number of products in store', event.target.result);\n     };\n \n     // get product with id 1\n     productsStore.get(1).onsuccess = function(event) {\n         console.log('[Transaction - GET] product with id 1', event.target.result);\n     };\n \n     // update product with id 1\n     vocabProgress[0].name = 'Blue Men T-shirt';\n     productsStore.put(vocabProgress[0]).onsuccess = function(event) {\n         console.log('[Transaction - PUT] product with id 1', event.target.result);\n     };\n     /*\n     // delete product with id 2\n     productsStore.delete(2).onsuccess = function(event) {\n         console.log('[Transaction - DELETE] deleted with id 2');\n     };\n      */\n };\n \n request.onerror = function(event) {\n     console.log('[onerror]', request.error);\n };\n \n request.onupgradeneeded = function(event) {\n    console.log('first db createion');\n     var db = event.target.result;\n     var productsStore = db.createObjectStore('VocabDB', {keyPath: 'id'});\n };\n\n\n\nclass App extends React.Component {\n  //constructor sets the state\n  constructor(props){\n    super(props);\n    this.state = {\n      page_state: '1',\n      level: '',\n      days: 0,\n      words: [],\n      list_words: [],\n      voc_rage: 0\n    };\n  }\n  //handle functions update the states\n  handleLevel = input_level => {\n    this.setState({\n      page_state: '2',\n      level: input_level\n    });\n  }\n\n  handleDays = (input_days, words_list, list_words, vocab_portion) => {\n    if (input_days > 0 && input_days < 8){\n      this.setState({\n        page_state:'3',\n        days: input_days,\n        words: words_list,\n        list_words: list_words,\n        voc_range: vocab_portion\n      });\n    }\n    else{\n      alert('This is either the first or last page');\n    }\n  }\n\n  handleHome = () => {\n    this.setState({\n      page_state: '1',\n      level: '',\n      days: 0,\n      words: [],\n      list_words: [],\n      voc_rage: 0\n    })\n  }\n\n  handleVocab = (input_vocab, definitions) => {\n    this.setState({\n\n    })\n  }\n\n\n  render_views = page_state => {\n    console.log('in renderviews: ', this.state.days);\n    if(page_state === '1'){\n      console.log('here')\n      return <Level handleButton={this.handleLevel}/>\n    }\n    else if(page_state === '2'){\n      return <Day level={this.state.level} handleButton={this.handleDays}/>\n    }\n    else if(page_state === '3'){\n      return <Vocab output_words={this.state.words} handleButton={this.handleVocab}\n      prevButton={this.handleDays} nextButton={this.handleDays} \n      list_words={this.state.list_words} vocab_portion={this.state.voc_range}\n      day={this.state.days} handleHome={this.handleHome}/>;\n    }\n    else{\n      return 'error occurred';\n    }\n  }\n\n  render(){\n    //state logic\n    var current_state = this.state.page_state;\n    console.log('state inputs days: ',this.state.days);\n\n    //return\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"btn-menu\">\n            <a href=\"\">\n              <em>\n              </em>\n            </a>\n          </div>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div className=\"stateViews\">\n          {this.render_views(current_state)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}