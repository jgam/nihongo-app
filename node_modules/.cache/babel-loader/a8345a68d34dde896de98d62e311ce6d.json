{"ast":null,"code":"var _jsxFileName = \"/Users/jeonghan.gam/Desktop/jgam/nihongo-app/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './css/App.css';\nimport Day from './Day';\nimport Level from './Level';\nimport Vocab from './Vocab';\nimport Database from './Database';\nimport Exam from './Exam';\nimport Dexie from 'dexie'; //db steps\n\n/*\n1. Open a database\n2. Create an object store in the database\n3. Start transaction and make request to do some database operation, adding or retrieving data\n4. Wait for the operation to complete by listening for the right kind of DOM event\n5. Do something with the results\n*/\n\nclass App extends React.Component {\n  //constructor sets the state\n  constructor(props) {\n    super(props);\n\n    this.updateDB = (request, output_words) => {\n      /*\n      vocabProgress[0].name = 'Blue Men T-shirt';\n       productsStore.put(vocabProgress[0]).onsuccess = function(event) {\n           console.log('[Transaction - PUT] product with id 1', event.target.result);\n       };\n      */\n      const db = new Dexie('VocabDB');\n      console.log('db is : ', db); //here lets call the api\n\n      console.log(db.VocabDB.get());\n      console.log('request is here : ', request); //request.event.target.result.transaction('VocabDB', 'readwrite').objectStore('VocabDB')\n\n      this.setState({\n        page_state: '4'\n      });\n    };\n\n    this.handleLevel = input_level => {\n      this.setState({\n        page_state: '2',\n        level: input_level\n      });\n    };\n\n    this.handleDays = (input_days, words_list, list_words, vocab_portion) => {\n      if (input_days > 0 && input_days < 8) {\n        this.setState({\n          page_state: '3',\n          days: input_days,\n          words: words_list,\n          list_words: list_words,\n          voc_range: vocab_portion\n        });\n      } else {\n        alert('This is either the first or last page');\n      }\n    };\n\n    this.handleHome = () => {\n      this.setState({\n        page_state: '1',\n        level: '',\n        days: 0,\n        words: [],\n        list_words: [],\n        voc_rage: 0\n      });\n    };\n\n    this.handleVocab = (input_vocab, definitions) => {\n      this.setState({});\n    };\n\n    this.render_views = page_state => {\n      console.log('in renderviews: ', this.state.days);\n\n      if (page_state === '1') {\n        console.log('here');\n        return React.createElement(Level, {\n          handleButton: this.handleLevel,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        });\n      } else if (page_state === '2') {\n        return React.createElement(Day, {\n          level: this.state.level,\n          handleButton: this.handleDays,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        });\n      } else if (page_state === '3') {\n        return React.createElement(Vocab, {\n          output_words: this.state.words,\n          handleButton: this.handleVocab,\n          prevButton: this.handleDays,\n          nextButton: this.handleDays,\n          list_words: this.state.list_words,\n          vocab_portion: this.state.voc_range,\n          day: this.state.days,\n          handleHome: this.handleHome,\n          updateDB: this.updateDB,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(Exam, {\n          words: this.state.words,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        });\n      }\n    };\n\n    this.state = {\n      page_state: '1',\n      level: '',\n      days: 0,\n      words: [],\n      list_words: [],\n      voc_rage: 0,\n      testing_vocabs: []\n    }; //db setup\n  } //db add data!\n\n\n  render() {\n    //state logic\n    var current_state = this.state.page_state;\n    console.log('state inputs days: ', this.state.days); //return\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"em\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))), React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"stateViews\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.render_views(current_state)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jeonghan.gam/Desktop/jgam/nihongo-app/src/App.js"],"names":["React","useState","Day","Level","Vocab","Database","Exam","Dexie","App","Component","constructor","props","updateDB","request","output_words","db","console","log","VocabDB","get","setState","page_state","handleLevel","input_level","level","handleDays","input_days","words_list","list_words","vocab_portion","days","words","voc_range","alert","handleHome","voc_rage","handleVocab","input_vocab","definitions","render_views","state","testing_vocabs","render","current_state","logo"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport logo from './logo.svg';\nimport './css/App.css';\nimport Day from './Day';\nimport Level from './Level';\nimport Vocab from './Vocab';\nimport Database from './Database';\nimport Exam from './Exam';\nimport Dexie from 'dexie';\n\n\n//db steps\n\n/*\n1. Open a database\n2. Create an object store in the database\n3. Start transaction and make request to do some database operation, adding or retrieving data\n4. Wait for the operation to complete by listening for the right kind of DOM event\n5. Do something with the results\n*/\n\n\n\nclass App extends React.Component {\n  //constructor sets the state\n  constructor(props){\n    super(props);\n    this.state = {\n      page_state: '1',\n      level: '',\n      days: 0,\n      words: [],\n      list_words: [],\n      voc_rage: 0,\n      testing_vocabs: []\n    };\n\n    //db setup\n  \n }\n\n  //db add data!\n  updateDB = (request, output_words) => {\n    /*\n    vocabProgress[0].name = 'Blue Men T-shirt';\n     productsStore.put(vocabProgress[0]).onsuccess = function(event) {\n         console.log('[Transaction - PUT] product with id 1', event.target.result);\n     };\n    */\n   const db = new Dexie('VocabDB');\n   console.log('db is : ', db);\n   //here lets call the api\n   console.log(db.VocabDB.get());\n   console.log('request is here : ', request);\n   //request.event.target.result.transaction('VocabDB', 'readwrite').objectStore('VocabDB')\n   this.setState({\n     page_state: '4'\n   });\n\n\n  }\n\n  //handle functions update the states\n  handleLevel = input_level => {\n    this.setState({\n      page_state: '2',\n      level: input_level\n    });\n  }\n\n  handleDays = (input_days, words_list, list_words, vocab_portion) => {\n    if (input_days > 0 && input_days < 8){\n      this.setState({\n        page_state:'3',\n        days: input_days,\n        words: words_list,\n        list_words: list_words,\n        voc_range: vocab_portion\n      });\n    }\n    else{\n      alert('This is either the first or last page');\n    }\n  }\n\n  handleHome = () => {\n    this.setState({\n      page_state: '1',\n      level: '',\n      days: 0,\n      words: [],\n      list_words: [],\n      voc_rage: 0\n    })\n  }\n\n  handleVocab = (input_vocab, definitions) => {\n    this.setState({\n\n    })\n  }\n\n\n  render_views = page_state => {\n    console.log('in renderviews: ', this.state.days);\n    if(page_state === '1'){\n      console.log('here')\n      return <Level handleButton={this.handleLevel}/>\n    }\n    else if(page_state === '2'){\n      return <Day level={this.state.level} handleButton={this.handleDays}/>\n    }\n    else if(page_state === '3'){\n      return <Vocab output_words={this.state.words} handleButton={this.handleVocab}\n      prevButton={this.handleDays} nextButton={this.handleDays} \n      list_words={this.state.list_words} vocab_portion={this.state.voc_range}\n      day={this.state.days} handleHome={this.handleHome} updateDB={this.updateDB}/>;\n    }\n    else{\n      return <Exam words={this.state.words}/>;\n    }\n  }\n\n  render(){\n    //state logic\n    var current_state = this.state.page_state;\n    console.log('state inputs days: ',this.state.days);\n\n\n    //return\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"btn-menu\">\n            <a href=\"\">\n              <em>\n              </em>\n            </a>\n          </div>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        <div className=\"stateViews\">\n          {this.render_views(current_state)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}